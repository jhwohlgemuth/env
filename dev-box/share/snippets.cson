'.source.js':
  'console.log':
    'prefix': 'log'
    'body': 'console.log(\'${1:Boot!}\');$2'
  'console.info':
    'prefix': 'info'
    'body': 'console.info(\'${1:Boot!}\');$2'
  'console.error':
    'prefix': 'err'
    'body': 'console.error(\'${1:Boot!}\');$2'
  'define':
    'prefix': 'def'
    'body': 'define(function(require, exports, module) {$1});';
  'use strict':
    'prefix': 'use'
    'body': """
    'use strict';
    """
  'require':
    'prefix': 'req'
    'body': 'require(\'${1:module}\');$2'
  'Anonymous Function':
    'prefix': 'f'
    'body': """
    function() {
        ${1:code}
    };
    """
  'Named Function':
    'prefix': 'fn'
    'body': """
    function ${1:foo}(${2:/*parameters*/}) {
        ${3://code}
    };
    """
  'BDD describe':
    'prefix': 'describe'
    'body': """
    describe('${1:Some Component}', function() {
        ${2://code}
    });
    """
  'BDD test spec':
    'prefix': 'it'
    'body': """
    it('${1:can do stuff}', () => {
        ${2://code}
    });$3
    """
  'Jasmine beforeEach':
    'prefix': 'before'
    'body': """
    beforeEach(() => {
        ${1://code}
    });$2
    """
  'Jasmine afterEach':
    'prefix': 'after'
    'body': """
    afterEach(() => {
        ${1://code}
    });$2
    """
  'BDD expect':
    'prefix': 'expect'
    'body': """
    expect(${1:conditional}).$2
    """
  'Beware of Dragons':
    'prefix': 'beware'
    'body': """
/*
~~~ HERE BE DRAGONS ~~~
________  ___ ________
  )_   ( '-,) )   _(
    )_  \_//_/  _(
      )___  ___(
          ))
         ((
          ``-
    ~~~ BEWARE ~~~
*/
    """
'.source.less':
  'MDCSS Flavored Header':
    'prefix': 'section'
    'body': """
/*---
title: ${1:TITLE}
sections: ${2:SECTION}
---

$3

```example
<div>hello world</div>
```

*/
    """
  'LESS Flavored Section Header':
    'prefix': 'header'
    'body': """
/*------------------------------------*\\\\
$ ${1:ENTER TITLE}
\\\\*------------------------------------*/$2
    """
