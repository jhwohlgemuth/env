FROM jhwohlgemuth/env

LABEL author="Jason Wohlgemuth"

EXPOSE 4669

# Install and Configure Jupyter server
WORKDIR /root
ENV JUPYTER_ROOT /root/.jupyter
ENV CERTS_DIR /root/certs
RUN mkdir -p /root/dev/notebooks && mkdir -p "${JUPYTER_ROOT}/custom" && mkdir -p $CERTS_DIR
COPY ./dev-with-docker/jupyter/jupyter_notebook_config.py $JUPYTER_ROOT
COPY ./dev-with-docker/jupyter/custom.css "${JUPYTER_ROOT}/custom"
COPY ./dev-with-docker/jupyter/ca.cnf $CERTS_DIR
WORKDIR $CERTS_DIR
RUN openssl req -new -x509 -days 365 -out my.pem -config ca.cnf
WORKDIR /root
RUN pip install --no-cache-dir \
        autopep8 \
        ipychart \
        jill \
        jupyter \
        jupyterlab \
        jupyter_contrib_nbextensions \
        jupyter-manim \
        jupyter-tabnine \
        jut \
        kotlin-jupyter-kernel \
        yapf\
    && pip install Pygments --upgrade --no-cache-dir \
    && jupyter contrib nbextension install --user \
    && jupyter nbextension install --py jupyter_tabnine --user \
    # && jupyter nbextension enable code_prettify/code_prettify --user \
    && jupyter nbextension enable --py jupyter_tabnine --user \
    && jupyter serverextension enable --py jupyter_tabnine --user

# Install language kernels
# .NET (C#, F#, and PowerShell)
ENV PATH "/root/.dotnet/tools:${PATH}"
RUN dotnet tool install --global Microsoft.dotnet-interactive && dotnet interactive jupyter install
# Coq
RUN pip install coq-jupyter && python -m coq_jupyter.install
# Go
RUN env GO111MODULE=on go get github.com/gopherdata/gophernotes \
    && export KERNEL_ROOT="$(jupyter --data-dir)/kernels" \
    && mkdir -p "${KERNEL_ROOT}/go" \
    && cd "${KERNEL_ROOT}/go" \
    && cp "$(go env GOPATH)"/pkg/mod/github.com/gopherdata/gophernotes@v0.7.3/kernel/*  "." \
    && chmod +w ./kernel.json \
    && sed "s|gophernotes|$(go env GOPATH)/bin/gophernotes|" < kernel.json.in > kernel.json
# Julia
RUN jill install --confirm && julia -e 'using Pkg;Pkg.add("IJulia")'
# R
RUN R -e "install.packages('IRkernel')" && R -e "IRkernel::installspec()"
# Rust
RUN cargo install evcxr_jupyter && evcxr_jupyter --install
# Clojure
# Note: Clojure kernel will not be useable until after https://github.com/clojupyter/clojupyter/issues/122 (hopefully)
RUN conda install -y -c simplect clojupyter
# Elixir
# Note: Includes temporary fix that can be removed after https://github.com/pprzetacznik/IElixir/pull/60 is merged
WORKDIR /opt
RUN git clone https://github.com/pprzetacznik/IElixir.git
WORKDIR /opt/IElixir
RUN git remote add awill1988 https://github.com/awill1988/IElixir.git \
    && git fetch awill1988 feature/elixir_1_12_otp_24_support \
    && git switch --track awill1988/feature/elixir_1_12_otp_24_support \
    && mix local.hex --force \
    && mix local.rebar --force \
    && mix deps.get \
    && mix deps.compile \
    && sed -i 's/python/python3/g' install_script.sh \
    && ./install_script.sh
# Haskell
ENV PATH "${PATH}:/root/.local/bin"
WORKDIR /opt
RUN git clone https://github.com/gibiansky/IHaskell
WORKDIR /opt/IHaskell
RUN stack setup \
    && stack build ihaskell --only-snapshot \
    && stack install ihaskell --local-bin-path ./bin/ \
    && ./bin/ihaskell install --stack
    
WORKDIR /root/dev/notebooks

ENTRYPOINT [ "jupyter" ]
CMD [ "notebook", "--allow-root" ]