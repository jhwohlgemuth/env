FROM ghcr.io/jhwohlgemuth/base:latest

LABEL author="Jason Wohlgemuth"
LABEL org.opencontainers.image.source https://github.com/jhwohlgemuth/env

# Port designated in ./code-server/config.yaml
EXPOSE 1337
# Port designated in ./jupyter/jupyter_notebook_config.py
EXPOSE 13337

SHELL ["/bin/bash", "-c"]
WORKDIR /root
ENV JUPYTER_ROOT /root/.jupyter
ENV CERTS_DIR /root/certs
RUN mkdir -p /root/dev/notebooks \
    && mkdir -p "${JUPYTER_ROOT}/custom" \
    && mkdir -p $CERTS_DIR
COPY ./jupyter/jupyter_notebook_config.py $JUPYTER_ROOT
COPY ./jupyter/custom.css "${JUPYTER_ROOT}/custom"
COPY ./jupyter/ca.cnf $CERTS_DIR
WORKDIR $CERTS_DIR
RUN openssl req -new -x509 -days 365 -out my.pem -config ca.cnf
WORKDIR /root
SHELL ["/root/miniconda3/bin/conda", "run", "-n", "base", "/bin/bash", "-c"]
RUN mamba install --name base --channel conda-forge \
        autopep8 \
        ipykernel \
        ipyparallel \
        manim \
        nb_conda_kernels \
    && mamba clean -yaf
RUN pip install --no-cache-dir --upgrade pip \
    && pip install --no-cache-dir \
        ipychart \
        ipyflow \
        jpterm \
        jupyter \
        jupyterlab \
        jupyter_contrib_nbextensions \
        jupyter-tabnine \
        # Turtle
        mobilechelonian \
        nbterm \
        yapf \
    && pip install --upgrade --no-cache-dir Pygments \
    # [Mito](https://docs.trymito.io/)x
    # && pip install --upgrade --no-cache-dir mitoinstaller && python -m mitoinstaller install \
    # Jupyter Extension Configuration
    && jupyter contrib nbextension install --user \
    && jupyter nbextension install --py jupyter_tabnine --user \
    && jupyter nbextension enable --py jupyter_tabnine --user \
    && jupyter serverextension enable --py jupyter_tabnine --user
#
# Install code-server (VS Code)
#
WORKDIR /root
ENV CODE_SERVER_CONFIG_DIR /app/code-server/config
RUN CODE_RELEASE=$(curl -sX GET https://api.github.com/repos/coder/code-server/releases/latest | awk '/tag_name/{print $4;exit}' FS='[""]' | sed 's|^v||') \
    && mkdir -p ${CODE_SERVER_CONFIG_DIR}/{data,extensions,workspace} \
    && curl -o /tmp/code-server.tar.gz -L "https://github.com/coder/code-server/releases/download/v${CODE_RELEASE}/code-server-${CODE_RELEASE}-linux-amd64.tar.gz" \
    && tar xf /tmp/code-server.tar.gz -C /app/code-server --strip-components=1
COPY ./code-server/settings.json /app/code-server/config/data/Machine/settings.json
COPY ./code-server/config.yaml /app/code-server/config/config.yaml
ENV PATH "${PATH}:/app/code-server/bin"
RUN code-server --extensions-dir ${CODE_SERVER_CONFIG_DIR}/extensions --install-extension akamud.vscode-theme-onedark \
    && code-server --extensions-dir ${CODE_SERVER_CONFIG_DIR}/extensions --install-extension emmanuelbeziat.vscode-great-icons \
    && code-server --extensions-dir ${CODE_SERVER_CONFIG_DIR}/extensions --install-extension ms-vscode.atom-keybindings \
    && code-server --extensions-dir ${CODE_SERVER_CONFIG_DIR}/extensions --install-extension ms-toolsai.jupyter \
    && code-server --extensions-dir ${CODE_SERVER_CONFIG_DIR}/extensions --install-extension ms-python.python \
    && code-server --extensions-dir ${CODE_SERVER_CONFIG_DIR}/extensions --install-extension eamodio.gitlens \
    && code-server --extensions-dir ${CODE_SERVER_CONFIG_DIR}/extensions --install-extension codeium.codeium
COPY ./code-server/service/* /etc/services.d/code-server/
COPY ./jupyter/service/* /etc/services.d/jupyter/

WORKDIR /root/dev
ENTRYPOINT [ "/init" ]
CMD ["/bin/zsh"]